# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-10-11 07:27
from __future__ import unicode_literals

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('BookManager', '0002_books_lending_log'),
    ]

    operations = [
        migrations.CreateModel(
            name='Digital_Records',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Book Title', max_length=100)),
                ('authors', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(default='Unknown Author', max_length=100), size=None)),
                ('publisher', models.CharField(blank=True, max_length=30, null=True)),
                ('published_date', models.DateField()),
                ('publication_type', models.CharField(max_length=30)),
                ('languages', models.CharField(max_length=30)),
                ('cover', models.ImageField(upload_to=b'')),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=50, null=True), size=None)),
                ('is_available', models.BooleanField(default=True)),
                ('lending_log', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True), blank=True, null=True, size=None)),
                ('access', models.BooleanField(default=True)),
                ('accessibility', models.CharField(choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D'), ('all', 'All')], default='all', max_length=10)),
                ('file_format', models.CharField(max_length=20)),
                ('source_url', models.URLField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Journals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Book Title', max_length=100)),
                ('authors', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(default='Unknown Author', max_length=100), size=None)),
                ('publisher', models.CharField(blank=True, max_length=30, null=True)),
                ('published_date', models.DateField()),
                ('publication_type', models.CharField(max_length=30)),
                ('languages', models.CharField(max_length=30)),
                ('cover', models.ImageField(upload_to=b'')),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=50, null=True), size=None)),
                ('is_available', models.BooleanField(default=True)),
                ('lending_log', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True), blank=True, null=True, size=None)),
                ('access', models.BooleanField(default=True)),
                ('accessibility', models.CharField(choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D'), ('all', 'All')], default='all', max_length=10)),
                ('subject', models.CharField(help_text='Subject', max_length=30)),
                ('journal_type', models.CharField(choices=[('open', 'Open'), ('peer', 'Peer-Reviewed'), ('scholarly', 'Scholarly Articles')], default='Peer-Reviewed', help_text='Journal Type', max_length=30)),
                ('identifier', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Magazines',
            fields=[
                ('books_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='BookManager.Books')),
                ('periodical_type', models.CharField(max_length=39)),
                ('archive_editions', django.contrib.postgres.fields.ArrayField(base_field=models.DateField(), blank=True, null=True, size=None)),
            ],
            options={
                'abstract': False,
            },
            bases=('BookManager.books',),
        ),
        migrations.AddField(
            model_name='books',
            name='access',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='books',
            name='accessibility',
            field=models.CharField(choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D'), ('all', 'All')], default='all', max_length=10),
        ),
        migrations.AddField(
            model_name='books',
            name='genre',
            field=models.CharField(blank=True, default='Uncategorised', help_text='Book - Genre', max_length=30),
        ),
        migrations.AlterField(
            model_name='books',
            name='authors',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(default='Unknown Author', max_length=100), size=None),
        ),
        migrations.AlterField(
            model_name='books',
            name='tags',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=50, null=True), size=None),
        ),
        migrations.CreateModel(
            name='Research_Paper',
            fields=[
                ('citations_count', models.IntegerField(default=0)),
                ('citation_sources', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(help_text='Identifier', max_length=30), size=None)),
                ('journals_ctr', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='BookManager.Journals')),
            ],
            options={
                'abstract': False,
            },
            bases=('BookManager.journals',),
        ),
    ]
