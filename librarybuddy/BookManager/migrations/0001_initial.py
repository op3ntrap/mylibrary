# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-10-20 16:48
from __future__ import unicode_literals

import BookManager.models
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('last_modified_on', models.DateTimeField(auto_created=True, auto_now=True)),
                ('_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('lending_log', django.contrib.postgres.fields.ArrayField(
                    base_field=django.contrib.postgres.fields.jsonb.JSONField(editable=False, null=True), blank=True,
                    editable=False, null=True, size=None)),
                ('title', models.CharField(help_text='Book Title', max_length=100)),
                ('authors', models.TextField(default='Unknown Author',
                                             help_text='Enter the Author names separated by a comma: <br>Eg. good,bad <br>For Tags which contain spaces can be entered by surrounding them with double quotes. <br>Eg."Risan Raja"',
                                             max_length=100)),
                ('publisher', models.CharField(blank=True, max_length=30, null=True)),
                ('published_date', models.DateField(blank=True, editable=False, null=True)),
                ('cover', models.ImageField(blank=True, null=True, upload_to='')),
                ('description', models.TextField(blank=True, null=True)),
                ('tags', models.CharField(blank=True,
                                          help_text='Enter the relevant Tags separated by a comma: <br>Eg. good,bad <br>For Tags which contain spaces can be entered by surrounding them with double quotes. <br>Eg."Machine Learning"',
                                          max_length=50, null=True)),
                ('page_count', models.IntegerField(blank=True, null=True)),
                ('identifier', models.CharField(
                    choices=[('isbn', 'ISBN'), ('asin', 'ASIN'), ('issn', 'ISSN'), ('doi', 'DOI'), ('lccn', 'LCCN'),
                             ('oclc', 'OCLC')], default='isbn', help_text='Select the type of Identifier',
                    max_length=10)),
                ('identifier_value',
                 models.CharField(default='654656', help_text='Please enter the Identifier Code', max_length=13,
                                  unique=True)),
                ('is_available', models.BooleanField(default=True, editable=False)),
                ('access', models.BooleanField(default=True)),
                ('accessibility',
                 models.CharField(choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D')], default='d',
                                  help_text='Membership Level Required', max_length=10)),
                ('penalty', models.FloatField(default=100)),
                ('urls', django.contrib.postgres.fields.jsonb.JSONField(default=BookManager.models.archive_url_json)),
                ('copies', models.IntegerField(default=1, editable=False, verbose_name='Number of Copies')),
                ('genre', models.CharField(blank=True, default='Uncategorised', help_text='Book - Genre', max_length=30)),
            ],
            options={
                'ordering': ['title', '-published_date'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DigitalRecords',
            fields=[
                ('last_modified_on', models.DateTimeField(auto_created=True, auto_now=True)),
                ('_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('lending_log', django.contrib.postgres.fields.ArrayField(
                    base_field=django.contrib.postgres.fields.jsonb.JSONField(editable=False, null=True), blank=True,
                    editable=False, null=True, size=None)),
                ('title', models.CharField(help_text='Book Title', max_length=100)),
                ('authors', models.TextField(default='Unknown Author',
                                             help_text='Enter the Author names separated by a comma: <br>Eg. good,bad <br>For Tags which contain spaces can be entered by surrounding them with double quotes. <br>Eg."Risan Raja"',
                                             max_length=100)),
                ('publisher', models.CharField(blank=True, max_length=30, null=True)),
                ('published_date', models.DateField(blank=True, editable=False, null=True)),
                ('cover', models.ImageField(blank=True, null=True, upload_to='')),
                ('description', models.TextField(blank=True, null=True)),
                ('tags', models.CharField(blank=True,
                                          help_text='Enter the relevant Tags separated by a comma: <br>Eg. good,bad <br>For Tags which contain spaces can be entered by surrounding them with double quotes. <br>Eg."Machine Learning"',
                                          max_length=50, null=True)),
                ('page_count', models.IntegerField(blank=True, null=True)),
                ('identifier', models.CharField(
                    choices=[('isbn', 'ISBN'), ('asin', 'ASIN'), ('issn', 'ISSN'), ('doi', 'DOI'), ('lccn', 'LCCN'),
                             ('oclc', 'OCLC')], default='isbn', help_text='Select the type of Identifier',
                    max_length=10)),
                ('identifier_value',
                 models.CharField(default='654656', help_text='Please enter the Identifier Code', max_length=13,
                                  unique=True)),
                ('is_available', models.BooleanField(default=True, editable=False)),
                ('access', models.BooleanField(default=True)),
                ('accessibility',
                 models.CharField(choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D')], default='d',
                                  help_text='Membership Level Required', max_length=10)),
                ('penalty', models.FloatField(default=100)),
                ('urls', django.contrib.postgres.fields.jsonb.JSONField(default=BookManager.models.archive_url_json)),
                ('copies', models.IntegerField(default=1, editable=False, verbose_name='Number of Copies')),
                ('file_format', models.CharField(max_length=20)),
                ('source_url', models.URLField(blank=True, null=True)),
            ],
            options={
                'ordering': ['title', '-published_date'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('last_modified_on', models.DateTimeField(auto_created=True, auto_now=True)),
                ('_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('lending_log', django.contrib.postgres.fields.ArrayField(
                    base_field=django.contrib.postgres.fields.jsonb.JSONField(editable=False, null=True), blank=True,
                    editable=False, null=True, size=None)),
                ('title', models.CharField(help_text='Book Title', max_length=100)),
                ('authors', models.TextField(default='Unknown Author',
                                             help_text='Enter the Author names separated by a comma: <br>Eg. good,bad <br>For Tags which contain spaces can be entered by surrounding them with double quotes. <br>Eg."Risan Raja"',
                                             max_length=100)),
                ('publisher', models.CharField(blank=True, max_length=30, null=True)),
                ('published_date', models.DateField(blank=True, editable=False, null=True)),
                ('cover', models.ImageField(blank=True, null=True, upload_to='')),
                ('description', models.TextField(blank=True, null=True)),
                ('tags', models.CharField(blank=True,
                                          help_text='Enter the relevant Tags separated by a comma: <br>Eg. good,bad <br>For Tags which contain spaces can be entered by surrounding them with double quotes. <br>Eg."Machine Learning"',
                                          max_length=50, null=True)),
                ('page_count', models.IntegerField(blank=True, null=True)),
                ('identifier', models.CharField(
                    choices=[('isbn', 'ISBN'), ('asin', 'ASIN'), ('issn', 'ISSN'), ('doi', 'DOI'), ('lccn', 'LCCN'),
                             ('oclc', 'OCLC')], default='isbn', help_text='Select the type of Identifier',
                    max_length=10)),
                ('identifier_value',
                 models.CharField(default='654656', help_text='Please enter the Identifier Code', max_length=13,
                                  unique=True)),
                ('is_available', models.BooleanField(default=True, editable=False)),
                ('access', models.BooleanField(default=True)),
                ('accessibility',
                 models.CharField(choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D')], default='d',
                                  help_text='Membership Level Required', max_length=10)),
                ('penalty', models.FloatField(default=100)),
                ('urls', django.contrib.postgres.fields.jsonb.JSONField(default=BookManager.models.archive_url_json)),
                ('copies', models.IntegerField(default=1, editable=False, verbose_name='Number of Copies')),
                ('subject', models.CharField(help_text='Subject', max_length=30)),
                ('journal_type', models.CharField(choices=[('open', 'Open'), ('peer', 'Peer-Reviewed'), ('scholarly', 'Scholarly Articles')], default='Peer-Reviewed', help_text='Journal Type', max_length=30)),
            ],
            options={
                'ordering': ['title', '-published_date'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Magazine',
            fields=[
                ('last_modified_on', models.DateTimeField(auto_created=True, auto_now=True)),
                ('_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('lending_log', django.contrib.postgres.fields.ArrayField(
                    base_field=django.contrib.postgres.fields.jsonb.JSONField(editable=False, null=True), blank=True,
                    editable=False, null=True, size=None)),
                ('title', models.CharField(help_text='Book Title', max_length=100)),
                ('authors', models.TextField(default='Unknown Author',
                                             help_text='Enter the Author names separated by a comma: <br>Eg. good,bad <br>For Tags which contain spaces can be entered by surrounding them with double quotes. <br>Eg."Risan Raja"',
                                             max_length=100)),
                ('publisher', models.CharField(blank=True, max_length=30, null=True)),
                ('published_date', models.DateField(blank=True, editable=False, null=True)),
                ('cover', models.ImageField(blank=True, null=True, upload_to='')),
                ('description', models.TextField(blank=True, null=True)),
                ('tags', models.CharField(blank=True,
                                          help_text='Enter the relevant Tags separated by a comma: <br>Eg. good,bad <br>For Tags which contain spaces can be entered by surrounding them with double quotes. <br>Eg."Machine Learning"',
                                          max_length=50, null=True)),
                ('page_count', models.IntegerField(blank=True, null=True)),
                ('identifier', models.CharField(
                    choices=[('isbn', 'ISBN'), ('asin', 'ASIN'), ('issn', 'ISSN'), ('doi', 'DOI'), ('lccn', 'LCCN'),
                             ('oclc', 'OCLC')], default='isbn', help_text='Select the type of Identifier',
                    max_length=10)),
                ('identifier_value',
                 models.CharField(default='654656', help_text='Please enter the Identifier Code', max_length=13,
                                  unique=True)),
                ('is_available', models.BooleanField(default=True, editable=False)),
                ('access', models.BooleanField(default=True)),
                ('accessibility',
                 models.CharField(choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D')], default='d',
                                  help_text='Membership Level Required', max_length=10)),
                ('penalty', models.FloatField(default=100)),
                ('urls', django.contrib.postgres.fields.jsonb.JSONField(default=BookManager.models.archive_url_json)),
                ('copies', models.IntegerField(default=1, editable=False, verbose_name='Number of Copies')),
                ('periodical_type', models.CharField(
                    choices=[('yearly', 'Yearly'), ('monthly', 'Monthly'), ('fortnightly', 'Fortnightly'),
                             ('weekly', 'Weekly'), ('daily', 'Daily')], help_text='Periodicity of the Magazine',
                    max_length=39)),
                ('archive_editions', django.contrib.postgres.fields.ArrayField(
                    base_field=models.DateField(help_text='enter date in YYYY-MM-DD'), blank=True,
                    help_text='enter date in YYYY-MM-DD', null=True, size=None)),
            ],
            options={
                'ordering': ['title', '-published_date'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResearchPaper',
            fields=[
                ('last_modified_on', models.DateTimeField(auto_created=True, auto_now=True)),
                ('_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('lending_log', django.contrib.postgres.fields.ArrayField(
                    base_field=django.contrib.postgres.fields.jsonb.JSONField(editable=False, null=True), blank=True,
                    editable=False, null=True, size=None)),
                ('title', models.CharField(help_text='Book Title', max_length=100)),
                ('authors', models.TextField(default='Unknown Author',
                                             help_text='Enter the Author names separated by a comma: <br>Eg. good,bad <br>For Tags which contain spaces can be entered by surrounding them with double quotes. <br>Eg."Risan Raja"',
                                             max_length=100)),
                ('publisher', models.CharField(blank=True, max_length=30, null=True)),
                ('published_date', models.DateField(blank=True, editable=False, null=True)),
                ('cover', models.ImageField(blank=True, null=True, upload_to='')),
                ('description', models.TextField(blank=True, null=True)),
                ('tags', models.CharField(blank=True,
                                          help_text='Enter the relevant Tags separated by a comma: <br>Eg. good,bad <br>For Tags which contain spaces can be entered by surrounding them with double quotes. <br>Eg."Machine Learning"',
                                          max_length=50, null=True)),
                ('page_count', models.IntegerField(blank=True, null=True)),
                ('identifier', models.CharField(
                    choices=[('isbn', 'ISBN'), ('asin', 'ASIN'), ('issn', 'ISSN'), ('doi', 'DOI'), ('lccn', 'LCCN'),
                             ('oclc', 'OCLC')], default='isbn', help_text='Select the type of Identifier',
                    max_length=10)),
                ('identifier_value',
                 models.CharField(default='654656', help_text='Please enter the Identifier Code', max_length=13,
                                  unique=True)),
                ('is_available', models.BooleanField(default=True, editable=False)),
                ('access', models.BooleanField(default=True)),
                ('accessibility',
                 models.CharField(choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D')], default='d',
                                  help_text='Membership Level Required', max_length=10)),
                ('penalty', models.FloatField(default=100)),
                ('urls', django.contrib.postgres.fields.jsonb.JSONField(default=BookManager.models.archive_url_json)),
                ('copies', models.IntegerField(default=1, editable=False, verbose_name='Number of Copies')),
                ('citations_count', models.IntegerField(default=0)),
                ('citation_sources', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(help_text='Identifier', max_length=30), size=None)),
                ('journal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='BookManager.Journal')),
            ],
            options={
                'ordering': ['title', '-published_date'],
                'abstract': False,
            },
        ),
        migrations.AlterUniqueTogether(
            name='magazine',
                unique_together=set([('identifier', 'identifier_value')]),
        ),
        migrations.AlterUniqueTogether(
            name='journal',
                unique_together=set([('identifier', 'identifier_value')]),
        ),
        migrations.AlterUniqueTogether(
            name='digitalrecords',
                unique_together=set([('identifier', 'identifier_value')]),
        ),
        migrations.AlterUniqueTogether(
            name='book',
                unique_together=set([('identifier', 'identifier_value')]),
        ),
        migrations.AlterUniqueTogether(
            name='researchpaper',
                unique_together=set([('identifier', 'identifier_value')]),
        ),
    ]
